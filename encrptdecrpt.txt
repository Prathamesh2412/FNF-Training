<!DOCTYPE html>
<html>
<head>
    <title>Expense Manager</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        const url = "/Expense/AllExpens";

        function createRow(expense) {
            const row = `<tr>
                            <td>${expense.expenseId}</td>
                            <td>${expense.expenseAmount}</td>
                            <td>${expense.expenseDesc}</td>
                            <td>${expense.expenseDate}</td>
                         </tr>`;
            return row;
        }

        function onGetRecordsSuccess(result) {
            $("table tbody tr").remove();
            $.each(result, function (index, value) {
                const row = createRow(value);
                $("table tbody").append(row);
            });
        }

        function ShowRecords() {
            $.get(url, onGetRecordsSuccess);
        }

        function addRecords() {
            const url = "/Expense/AddExpense";
            let expense = {
                "expenseAmount": $("#expenseAmount").val(),
                "expenseDesc": $("#expenseDesc").val(),
                "expenseDate": $("#expenseDate").val()
            };
            $.post(url, expense, (res) => {
                alert(res);
                ShowRecords(); 
            });
        }

        function findRecordsByDesc() {
            const desc = $("#txtSearchDesc").val();
            const findUrl = `/Expense/FindByDesc?desc=${desc}`;
            $.get(findUrl, onGetRecordsSuccess);
        }

        function findRecordsByDate() {
            const date = $("#txtSearchDate").val();
            const findUrl = `/Expense/SearchByDate?date=${date}`;
            $.get(findUrl, onGetRecordsSuccess);
        }

        function findRecordsByMonth() {
            const month = $("#txtSearchMonth").val();
            const findUrl = `/Expense/SearchByMonth?month=${month}`;
            $.get(findUrl, onGetRecordsSuccess);
        }

        function init() {
            $("#btnShow").click(ShowRecords);
            $("#btnAdd").click(addRecords);
            $("#btnSearchDesc").click(findRecordsByDesc);
            $("#btnSearchDate").click(findRecordsByDate);
            $("#btnSearchMonth").click(findRecordsByMonth);
        }

        $(document).ready(init);
    </script>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container">
            <a class="navbar-brand" href="#">Expense Manager</a>
            <button id="btnShow" class="btn btn-info ml-auto">Show Records</button>
        </div>
    </nav>

    <div class="container mt-5">
        <h1 class="text-center mb-4">Manage Your Expenses</h1>
        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Add New Expense</h5>
                        <div class="form-group">
                            <label for="expenseAmount">Amount</label>
                            <input type="text" id="expenseAmount" class="form-control" placeholder="Enter amount">
                        </div>
                        <div class="form-group">
                            <label for="expenseDesc">Description</label>
                            <input type="text" id="expenseDesc" class="form-control" placeholder="Enter description">
                        </div>
                        <div class="form-group">
                            <label for="expenseDate">Date</label>
                            <input type="date" id="expenseDate" class="form-control">
                        </div>
                        <button id="btnAdd" class="btn btn-primary">Add Expense</button>
                    </div>
                </div>
            </div>
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Search Expenses</h5>
                        <div class="form-group">
                            <label for="txtSearchDesc">By Description</label>
                            <input type="search" id="txtSearchDesc" class="form-control" placeholder="Search by description">
                            <button id="btnSearchDesc" class="btn btn-secondary mt-2">Search</button>
                        </div>
                        <div class="form-group">
                            <label for="txtSearchDate">By Date</label>
                            <input type="date" id="txtSearchDate" class="form-control">
                            <button id="btnSearchDate" class="btn btn-secondary mt-2">Search</button>
                        </div>
                        <div class="form-group">
                            <label for="txtSearchMonth">By Month</label>
                            <input type="number" id="txtSearchMonth" class="form-control" placeholder="Enter month (1-12)">
                            <button id="btnSearchMonth" class="btn btn-secondary mt-2">Search</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <table class="table table-bordered table-striped mt-4">
            <thead>
                <tr>
                    <th>ExpenseId</th>
                    <th>Amount</th>
                    <th>Description</th>
                    <th>Date</th>
                </tr>
            </thead>
            <tbody>
                <!-- Data will be appended here -->
            </tbody>
        </table>
    </div>
</body>
</html>






<!DOCTYPE html>
<html>
<head>
    <title>Expense Manager</title>
   
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
    <script>
        const url = "Expense/AllExpens";

        function createRow(expense) {
            const row = `<tr>
                                            <td>${expense.expenseId}</td>
                                            <td>${expense.expenseAmount}</td>
                                            <td>${expense.expenseDesc}</td>
                                            <td>${expense.expenseDate}</td>
                                 </tr>`;
            return row;
        }

        function onGetRecordsSuccess(result) {
            $("table tbody tr").remove();
            $.each(result, function (index, value) {
                const row = createRow(value);
                $("table tbody").append(row);
            });
        }

        function ShowRecords() {
            $.get(url, onGetRecordsSuccess);
        }

        function addRecords() {
            const url = "/Expense/AddExpense";
            let expense = {
                "expenseAmount": $("#expenseAmount").val(),
                "expenseDesc": $("#expenseDesc").val(),
                "expenseDate": $("#expenseDate").val()
            };
            $.post(url, expense, (res) => {
                alert(res);
                ShowRecords(); 
            });
        }

        function findRecordsByDesc() {
            const desc = $("#txtSearchDesc").val();
            const findUrl = `/Expense/FindByDesc?desc=${desc}`;
            $.get(findUrl, onGetRecordsSuccess);
        }

        function findRecordsByDate() {
            const date = $("#txtSearchDate").val();
            const findUrl = `/Expense/SearchByDate?date=${date}`;
            $.get(findUrl, onGetRecordsSuccess);
        }

        function findRecordsByMonth() {
            const month = $("#txtSearchMonth").val();
            const findUrl = `/Expense/SearchByMonth?month=${month}`;
            $.get(findUrl, onGetRecordsSuccess);
        }

        function init() {
            $("#btnShow").click(ShowRecords);
            $("#btnAdd").click(addRecords);
            $("#btnSearchDesc").click(findRecordsByDesc);
            $("#btnSearchDate").click(findRecordsByDate);
            $("#btnSearchMonth").click(findRecordsByMonth);
        }

        $(document).ready(init);
    </script>
</head>
<body>
    <nav class="navbar bg-light">
        <button id="btnShow" class="btn btn-info m-4">Show Records</button>

       
    </nav>

    <h1>Expense Manager</h1>
    <hr />
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <input type="text" id="expenseAmount" placeholder="Expense Amount" class="form-control mb-2" />
                <input type="text" id="expenseDesc" placeholder="Expense Description" class="form-control mb-2" />
                <input type="date" id="expenseDate" placeholder="Expense Date" class="form-control mb-2" />
                <button id="btnAdd" class="btn btn-secondary m-4">Add Records</button>
            </div>
            <div class="col-md-6">
                <input type="search" id="txtSearchDesc" placeholder="Search by Description" class="form-control mb-2" />
                <button id="btnSearchDesc" class="btn btn-primary mb-2">Search</button>
                <input type="date" id="txtSearchDate" placeholder="Search by Date" class="form-control mb-2" />
                <button id="btnSearchDate" class="btn btn-primary mb-2">Search</button>
                <input type="number" id="txtSearchMonth" placeholder="Search by Month" class="form-control mb-2" />
                <button id="btnSearchMonth" class="btn btn-primary mb-2">Search</button>
            </div>
        </div>
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>ExpenseId</th>
                    <th>ExpenseAmount</th>
                    <th>ExpenseDesc</th>
                    <th>ExpenseDate</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</body>
</html>



































<!DOCTYPE html>
<html>
<head>
    <title>Expense Manager</title>
    <script src="./lib/jquery/jquery-3.7.1.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
    <script>
        const url = "/Expense/AllExpens";
        
        function createRow(expense) {
            const row = `<tr>
                            <td>${expense.ExpenseId}</td>
                            <td>${expense.ExpenseAmount}</td>
                            <td>${expense.ExpenseDesc}</td>
                            <td>${expense.ExpenseDate}</td>
                         </tr>`;
            return row;
        }

        function onGetRecordsSuccess(result) {
            $("table tbody tr").remove();
            $.each(result, function (index, value) {
                const row = createRow(value);
                $("table tbody").append(row);
            });
        }

        function ShowRecords() {
            $.get(url, onGetRecordsSuccess);
        }

        function addRecords() {
            const url = "/Expense/AddExpense";
            let expense = {
                "ExpenseAmount": $("#expenseAmount").val(),
                "ExpenseDesc": $("#expenseDesc").val(),
                "ExpenseDate": $("#expenseDate").val()
            };
            $.post(url, expense, (res) => {
                alert(res);
                ShowRecords(); // Refresh records
            });
        }

        function findRecordsByDesc() {
            const desc = $("#txtSearchDesc").val();
            const findUrl = `/Expense/FindByDesc?desc=${desc}`;
            $.get(findUrl, onGetRecordsSuccess);
        }

        function findRecordsByDate() {
            const date = $("#txtSearchDate").val();
            const findUrl = `/Expense/SearchByDate?date=${date}`;
            $.get(findUrl, onGetRecordsSuccess);
        }

        function findRecordsByMonth() {
            const month = $("#txtSearchMonth").val();
            const findUrl = `/Expense/SearchByMonth?month=${month}`;
            $.get(findUrl, onGetRecordsSuccess);
        }

        function init() {
            $("#btnShow").click(ShowRecords);
            $("#btnAdd").click(addRecords);
            $("#btnSearchDesc").click(findRecordsByDesc);
            $("#btnSearchDate").click(findRecordsByDate);
            $("#btnSearchMonth").click(findRecordsByMonth);
        }

        $(document).ready(init);
    </script>
</head>
<body>
    <nav class="navbar bg-light">
        <button id="btnShow" class="btn btn-info m-4">Show Records</button>
        <button id="btnAdd" class="btn btn-secondary m-4">Add Records</button>
    </nav>

    <h1>Expense Manager</h1>
    <hr />
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <input type="text" id="expenseAmount" placeholder="Expense Amount" class="form-control mb-2" />
                <input type="text" id="expenseDesc" placeholder="Expense Description" class="form-control mb-2" />
                <input type="date" id="expenseDate" placeholder="Expense Date" class="form-control mb-2" />
            </div>
            <div class="col-md-6">
                <input type="search" id="txtSearchDesc" placeholder="Search by Description" class="form-control mb-2" />
                <button id="btnSearchDesc" class="btn btn-primary mb-2">Search</button>
                <input type="date" id="txtSearchDate" placeholder="Search by Date" class="form-control mb-2" />
                <button id="btnSearchDate" class="btn btn-primary mb-2">Search</button>
                <input type="number" id="txtSearchMonth" placeholder="Search by Month" class="form-control mb-2" />
                <button id="btnSearchMonth" class="btn btn-primary mb-2">Search</button>
            </div>
        </div>
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>ExpenseId</th>
                    <th>ExpenseAmount</th>
                    <th>ExpenseDesc</th>
                    <th>ExpenseDate</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</body>
</html>









using ExpenseManager.Models;
using Microsoft.AspNetCore.Mvc;

namespace ExpenseManager.Controllers
{
    public class ExpenseController : Controller
    {
        private readonly ExpenseDbContext _ExpenseDbContext;

        public ExpenseController(ExpenseDbContext context)
        {
            this._ExpenseDbContext = context;
        }
        public JsonResult AllExpens()
        {
            var ExpenseList = _ExpenseDbContext.Expenses.ToList();
            return Json(ExpenseList);
        }

        [HttpPost]
        public string AddExpense(Expense expense)
        {
            _ExpenseDbContext.Expenses.Add(expense);
            _ExpenseDbContext.SaveChanges();
            return "Expense added";
        }

        public JsonResult FindByDesc(string desc)
        {
            var found = _ExpenseDbContext.Expenses.FirstOrDefault(e=>e.ExpenseDesc.Contains(desc));
            return Json(found);
        }

        public JsonResult SearchByMonth(int month)
        {
            var found = _ExpenseDbContext.Expenses.FirstOrDefault(s=>s.ExpenseDate.Month==month);
            return Json(found);
        }

        public JsonResult SearchByDate(DateTime date)
        {
            var found = _ExpenseDbContext.Expenses.FirstOrDefault(s=>s.ExpenseDate.Date==date);
            return Json(found);
        }
    }
}

<!DOCTYPE html>
<html>
<head>
    <title>Expense Manager</title>
    <script src="./lib/jquery/jquery-3.7.1.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
    <script>
        const url = "/Expense/AllExpens"
        function createRow(Movie) {
            const row = `<tr>
                                <td>${Expense.ExpenseId}</td>
                               <td>${Expense.ExpenseAmount}</td>
                                      <td>${Expense.ExpenseDesc}</td>
                                      <td>${Expense.ExpenseDate}</td>
                                       
                                        </tr>`
            return row;
        }
        function onGetRecordsSuccess(result) {
            $("table tbody tr").remove();
            $.each(result, function (index, value) {
                const row = createRow(value)
                $("table tbody").append(row);
            })
        }
        function ShowRecords() {
            $.get(url, onGetRecordsSuccess)
        }
        // function findRecords() {
        //     const title = $("#txtSearch").val()
        //     const findUrl = `Movie/Find?title=${title}`

        //     $.get(findUrl, onGetRecordsSuccess);

        // }
        function addRecords() {
            const url = "Expense/AddExpense";
             let movie = {
                "ExpenseId": 1,
                "ExpenseAmount": 989,
                "ExpenseDesc": "Eatires",
                "ExpenseDate": 29/02/2024,
             }
             $.post(url, movie, (res) => {
                 alert(res);
             })
        }
        function deleteRecords() {
            alert("delete")
        }

        function init() {
            $("#btnShow").click(ShowRecords);
            $("#btnFind").click(findRecords);
            $("#btnAdd").click(addRecords);
           
        }
        $(document).ready(init);
    </script>

</head>
<body>

</body>
<nav class="navbar bg-light">
    <button id="btnShow" class="btn btn-info m-4 ">show Records</button>
    <button id="btnFind" class="btn btn-primary m-4">find Records</button>
    <button id="btnAdd" class="btn btn-secondary m-4">Add Records</button>
    
</nav>
<h1>Expense Manager</h1>
<hr />
<div>
    <p>Expense data</p>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-11">
            <input type="search" id="txtSearch" placeholder="Search Expense by desc" class="form-control" onchange="findRecords()" />
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>ExpenseId</th>
                        <th>ExpenseAmount</th>
                        <th>ExpenseDesc</th>
                        <th>ExpenseDate</th>
                        
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>     
</div>
</html>











































using Microsoft.EntityFrameworkCore;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace ExpenseManager.Models
{
    [Table("ExpenseDb")]
    public class Expense
    {
        [Key]
        public int ExpenseId { get; set; }
        public int ExpenseAmount {  get; set; }
        public string ExpenseDesc {  get; set; }=string.Empty;
        public DateTime ExpenseDate { get; set; }
        
    }
    public class ExpenseDbContext : DbContext
    {
        public DbSet<Expense> Expenses { get; set; }

        public ExpenseDbContext(DbContextOptions options) : base(options) { }
    }
}




























public class ExpenseController : Controller
{
    private readonly ExpenseContext _context;

    public ExpenseController(ExpenseContext context)
    {
        _context = context;
    }

    // View to Add Expense
    public IActionResult Add()
    {
        return View();
    }

    // Add Expense Post Action
    [HttpPost]
    public async Task<IActionResult> Add(Expense expense)
    {
        if (ModelState.IsValid)
        {
            _context.Expenses.Add(expense);
            await _context.SaveChangesAsync();
            return RedirectToAction("Index"); // Redirect to a list or confirmation page
        }
        return View(expense);
    }

    // View to Find Expenses
    public IActionResult Find()
    {
        return View();
    }

    // Find Expenses by Date
    [HttpPost]
    public async Task<IActionResult> FindByDate(DateTime date)
    {
        var expenses = await _context.Expenses.Where(e => e.Date.Date == date.Date).ToListAsync();
        return View("FindResults", expenses);
    }

    // Find Expenses by Description
    [HttpPost]
    public async Task<IActionResult> FindByDescription(string description)
    {
        var expenses = await _context.Expenses.Where(e => e.Description.Contains(description)).ToListAsync();
        return View("FindResults", expenses);
    }

    // Find Expenses by Month
    [HttpPost]
    public async Task<IActionResult> FindByMonth(int month)
    {
        var expenses = await _context.Expenses.Where(e => e.Date.Month == month).ToListAsync();
        return View("FindResults", expenses);
    }
}










[Route("api/[controller]")]
[ApiController]
public class ExpenseController : ControllerBase
{
    private readonly ExpenseContext _context;

    public ExpenseController(ExpenseContext context)
    {
        _context = context;
    }

    [HttpPost]
    public async Task<IActionResult> AddExpense([FromBody] Expense expense)
    {
        _context.Expenses.Add(expense);
        await _context.SaveChangesAsync();
        return Ok(expense);
    }

    [HttpGet("date/{date}")]
    public async Task<IActionResult> GetExpensesByDate(DateTime date)
    {
        var expenses = await _context.Expenses.Where(e => e.Date.Date == date.Date).ToListAsync();
        return Ok(expenses);
    }

    [HttpGet("description/{description}")]
    public async Task<IActionResult> GetExpensesByDescription(string description)
    {
        var expenses = await _context.Expenses.Where(e => e.Description.Contains(description)).ToListAsync();
        return Ok(expenses);
    }

    [HttpGet("month/{month}")]
    public async Task<IActionResult> GetExpensesByMonth(int month)
    {
        var expenses = await _context.Expenses.Where(e => e.Date.Month == month).ToListAsync();
        return Ok(expenses);
    }
}


$(document).ready(function(){
    $("#addExpenseForm").submit(function(event){
        event.preventDefault();
        var expenseData = {
            date: $("#date").val(),
            amount: $("#amount").val(),
            description: $("#description").val()
        };
        
        $.ajax({
            url: "/api/expenses",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(expenseData),
            success: function(result){
                alert("Expense added successfully!");
            }
        });
    });
});
